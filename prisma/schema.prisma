// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  INDIVIDUAL
  NON_INDIVIDUAL
}

enum TaxClassification {
  VAT
  NON_VAT
  WITHHOLDING
  MIXED
  OTHERS
}

enum Frequency {
  MONTHLY
  QUARTERLY
  ANNUAL
  ONE_TIME
}

enum Status {
  ACTIVE
  INACTIVE
  EXEMPT
}

enum ScheduleStatus {
  DUE
  FILED
  LATE
  EXEMPT
}

model Organization {
  id                String   @id @default(cuid())
  name              String
  tin               String?
  category          Category
  subcategory       String?
  tax_classification TaxClassification
  registration_date DateTime?
  address           String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  deleted_at        DateTime?

  obligations       OrganizationObligation[]
  status            OrganizationStatus?
}

model TaxObligation {
  id         String    @id @default(cuid())
  code       String
  name       String
  frequency  Frequency
  due_rule   Json
  active     Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  organizations      OrganizationObligation[]
}

model OrganizationObligation {
  id               String        @id @default(cuid())
  organization_id  String
  obligation_id    String
  start_date       DateTime
  end_date         DateTime?
  status           Status        @default(ACTIVE)
  notes            String?
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt

  organization     Organization  @relation(fields: [organization_id], references: [id])
  obligation       TaxObligation @relation(fields: [obligation_id], references: [id])

  schedules        ObligationSchedule[]

  @@unique([organization_id, obligation_id])
}

model ObligationSchedule {
  id                  String         @id @default(cuid())
  org_obligation_id   String
  period              String
  due_date            DateTime
  status              ScheduleStatus @default(DUE)
  filed_at            DateTime?
  created_at          DateTime       @default(now())
  updated_at          DateTime       @updatedAt

  org_obligation      OrganizationObligation @relation(fields: [org_obligation_id], references: [id])
}

model OrganizationStatus {
  id              String   @id @default(cuid())
  organization_id String   @unique
  status          String   @default("PENDING")
  last_update     DateTime @default(now())
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  organization    Organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)
}


