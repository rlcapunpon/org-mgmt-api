// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  INDIVIDUAL
  NON_INDIVIDUAL
}

enum SubCategory {
  SELF_EMPLOYED
  SOLE_PROPRIETOR
  FREELANCER
  CORPORATION
  PARTNERSHIP
  OTHERS
}

enum TaxClassification {
  VAT
  NON_VAT
  EXCEMPT
}

enum Frequency {
  MONTHLY
  QUARTERLY
  ANNUAL
  ONE_TIME
}

enum Status {
  ACTIVE
  INACTIVE
  EXEMPT
}

enum ScheduleStatus {
  DUE
  FILED
  LATE
  EXEMPT
}

enum AccountingMethod {
  ACCRUAL
  CASH
  OTHERS
}

enum OrganizationStatusChangeReasonEnum {
  EXPIRED
  OPTED_OUT
  PAYMENT_PENDING
  VIOLATIONS
}

enum BusinessStatus {
  REGISTERED       // Successfully registered with BIR (active taxpayer)
  PENDING_REG      // Application submitted but not yet completed
  ACTIVE           // Currently operating, obligations ongoing
  INACTIVE         // Temporarily not operating (filed for suspension)
  CESSATION        // Operations stopped, closing process ongoing
  CLOSED           // Deregistered / business officially closed
  NON_COMPLIANT    // Active but flagged for missed filings/payments
  UNDER_AUDIT      // Under LOA / investigation by BIR
  SUSPENDED        // Temporarily suspended by order (e.g., regulatory)
}

enum TaxObligationStatus {
  MANDATORY     // Required by law for this taxpayer classification
  OPTIONAL      // Elective (e.g., VAT registration below threshold)
  EXEMPT        // Covered by exemption or incentive
  CONDITIONAL   // Applies only if certain conditions are met
  ONE_TIME      // Non-recurring (Estate Tax, Donorâ€™s Tax, CGT, etc.)
  RETIRED       // No longer enforced (historical/defunct)
}

enum OrganizationTaxObligationStatus {
  NOT_APPLICABLE   // This obligation does not apply to the business
  ASSIGNED         // Business is registered/enrolled for this obligation
  ACTIVE           // Obligation is active and recurring
  DUE              // Filing/payment deadline is approaching
  FILED            // Filed but not yet fully paid
  PAID             // Filed and settled
  OVERDUE          // Missed deadline, not yet complied
  LATE             // Filed/paid but after deadline
  EXEMPT           // Business is exempt from this obligation
  SUSPENDED        // Temporarily suspended by BIR (e.g., inactive status approved)
  CLOSED           // Obligation ended due to business closure/deregistration
}

model Organization {
  id                String   @id @default(cuid())
  name              String
  tin               String?
  category          Category
  subcategory       SubCategory?
  tax_classification TaxClassification
  registration_date DateTime?
  address           String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  deleted_at        DateTime?

  obligations       OrganizationObligation[]
  status            OrganizationStatus?
  operation         OrganizationOperation?
  registration      OrganizationRegistration?
  statusChangeReasons OrganizationStatusChangeReason[]
}

model TaxObligation {
  id         String    @id @default(cuid())
  code       String    @unique
  name       String
  frequency  Frequency
  due_rule   Json
  status     TaxObligationStatus @default(MANDATORY)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  organizations      OrganizationObligation[]
}

model OrganizationObligation {
  id               String        @id @default(cuid())
  organization_id  String
  obligation_id    String
  start_date       DateTime
  end_date         DateTime?
  status           OrganizationTaxObligationStatus @default(ASSIGNED)
  notes            String?
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt

  organization     Organization  @relation(fields: [organization_id], references: [id])
  obligation       TaxObligation @relation(fields: [obligation_id], references: [id])

  schedules        ObligationSchedule[]

  @@unique([organization_id, obligation_id])
}

model ObligationSchedule {
  id                  String         @id @default(cuid())
  org_obligation_id   String
  period              String
  due_date            DateTime
  status              ScheduleStatus @default(DUE)
  filed_at            DateTime?
  created_at          DateTime       @default(now())
  updated_at          DateTime       @updatedAt

  org_obligation      OrganizationObligation @relation(fields: [org_obligation_id], references: [id])
}

model OrganizationStatus {
  id              String   @id @default(cuid())
  organization_id String   @unique
  status          BusinessStatus @default(PENDING_REG)
  last_update     DateTime @default(now())
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  organization    Organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)
}

model OrganizationOperation {
  id                        String    @id @default(cuid())
  organization_id           String    @unique
  fy_start                  DateTime
  fy_end                    DateTime
  vat_reg_effectivity       DateTime
  registration_effectivity  DateTime
  payroll_cut_off           String[]
  payment_cut_off           String[]
  quarter_closing           String[]
  has_foreign               Boolean   @default(false)
  has_employees             Boolean   @default(false)
  is_ewt                    Boolean   @default(false)
  is_fwt                    Boolean   @default(false)
  is_bir_withholding_agent  Boolean   @default(false)
  accounting_method         AccountingMethod @default(ACCRUAL)
  last_update               DateTime  @default(now())
  created_at                DateTime  @default(now())
  updated_at                DateTime  @updatedAt

  organization              Organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)
}

model OrganizationRegistration {
  organization_id  String   @id
  first_name       String
  middle_name      String?
  last_name        String
  trade_name       String?
  line_of_business String
  address_line     String
  region           String
  city             String
  zip_code         String
  tin              String   @db.VarChar(12)
  rdo_code         String
  contact_number   String
  email_address    String
  tax_type         TaxClassification
  start_date       DateTime
  reg_date         DateTime
  update_date      DateTime @default(now())
  update_by        String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  organization     Organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)
}

model OrganizationStatusChangeReason {
  id              String                              @id @default(cuid())
  organization_id String
  reason          OrganizationStatusChangeReasonEnum
  description     String?
  update_date     DateTime                            @default(now())
  updated_by      String

  organization    Organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)
}


